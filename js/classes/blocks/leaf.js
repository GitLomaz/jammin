// class Leaf extends Block {
//   constructor(x, y) {
//     super(x, y);
//     this.health = 1;
//     this.score = 50;
//     // this.shape = [[29, 0], [28, 1], [27, 2], [26, 3], [25, 4], [24, 5], [23, 5], [22, 6], [22, 7], [22, 8], [21, 9], [20, 9], [19, 8], [18, 7], [17, 7], [16, 7], [16, 8], [16, 9], [16, 10], [16, 11], [16, 12], [17, 13], [17, 14], [18, 15], [17, 16], [17, 17], [17, 18], [18, 19], [19, 20], [19, 21], [20, 22], [20, 23], [21, 24], [21, 25], [20, 26], [19, 27], [18, 27], [17, 26], [16, 25], [15, 24], [15, 23], [14, 23], [13, 23], [12, 22], [11, 21], [10, 21], [9, 22], [8, 22], [7, 22], [6, 21], [5, 21], [4, 21], [3, 21], [2, 21], [1, 21], [1, 22], [1, 23], [1, 24], [1, 25], [1, 26], [2, 27], [1, 28], [1, 29], [1, 30], [1, 31], [2, 32], [3, 33], [3, 34], [2, 35], [2, 36], [3, 37], [4, 37], [5, 38], [6, 39], [7, 40], [8, 40], [9, 41], [10, 41], [11, 41], [12, 42], [13, 42], [14, 42], [15, 43], [14, 44], [13, 45], [12, 45], [11, 45], [10, 46], [9, 47], [8, 47], [7, 48], [7, 49], [7, 50], [7, 51], [6, 52], [5, 53], [4, 53], [3, 54], [3, 55], [4, 55], [5, 56], [6, 55], [7, 55], [8, 55], [9, 55], [10, 55], [11, 55], [12, 55], [13, 56], [14, 55], [15, 55], [16, 55], [17, 54], [18, 54], [19, 54], [20, 55], [21, 54], [22, 54], [23, 54], [24, 53], [25, 52], [26, 51], [27, 50], [28, 49], [29, 50], [29, 51], [29, 52], [29, 53], [30, 54], [31, 55], [32, 56], [33, 57], [34, 58], [35, 58], [36, 59], [37, 59], [38, 59], [39, 59], [40, 58], [40, 57], [40, 56], [40, 55], [40, 54], [41, 53], [42, 54], [43, 54], [44, 55], [45, 55], [46, 55], [47, 55], [48, 55], [49, 55], [50, 55], [51, 55], [52, 55], [53, 55], [54, 55], [55, 56], [56, 55], [57, 55], [57, 54], [56, 53], [55, 53], [54, 52], [53, 51], [53, 50], [53, 49], [53, 48], [52, 47], [51, 47], [50, 46], [49, 45], [48, 45], [47, 45], [46, 44], [46, 43], [47, 42], [48, 41], [49, 41], [50, 41], [51, 40], [52, 40], [53, 39], [54, 39], [55, 38], [56, 37], [57, 37], [58, 36], [58, 35], [57, 34], [57, 33], [58, 32], [59, 31], [59, 30], [59, 29], [59, 28], [59, 27], [59, 26], [59, 25], [59, 24], [59, 23], [59, 22], [59, 21], [58, 21], [57, 21], [56, 21], [55, 21], [54, 21], [53, 22], [52, 22], [51, 22], [50, 21], [49, 21], [48, 22], [47, 23], [46, 23], [45, 23], [45, 24], [44, 25], [43, 26], [42, 27], [41, 27], [40, 26], [39, 25], [39, 24], [40, 23], [40, 22], [41, 21], [42, 20], [42, 19], [43, 18], [43, 17], [43, 16], [42, 15], [43, 14], [43, 13], [44, 12], [44, 11], [44, 10], [44, 9], [44, 8], [44, 7], [43, 7], [42, 7], [41, 8], [40, 9], [39, 9], [38, 8], [38, 7], [38, 6], [37, 5], [36, 5], [35, 4], [34, 3], [33, 2], [32, 1], [31, 0], [30, 0]]
//     this.shape = [[17, 18], [18, 19], [19, 20], [19, 21], [20, 22], [20, 23], [21, 24], [21, 25], [20, 26], [19, 27], [18, 27], [17, 26], [16, 25], [15, 24], [15, 23], [14, 23], [13, 23], [12, 22], [11, 21], [10, 21], [9, 22], [8, 22], [7, 22], [6, 21], [5, 21], [4, 21], [3, 21], [2, 21], [1, 21], [1, 22], [1, 23], [1, 24], [1, 25], [1, 26], [2, 27], [1, 28], [1, 29], [1, 30], [1, 31], [2, 32], [3, 33], [3, 34], [2, 35], [2, 36], [3, 37], [4, 37], [5, 38], [6, 39], [7, 40], [8, 40], [9, 41], [10, 41], [11, 41], [12, 42], [13, 42], [14, 42], [15, 43], [14, 44], [13, 45], [12, 45], [11, 45], [10, 46], [9, 47], [8, 47], [7, 48], [7, 49], [7, 50], [7, 51], [6, 52], [5, 53], [4, 53], [3, 54], [3, 55], [4, 55], [5, 56], [6, 55], [7, 55], [8, 55], [9, 55], [10, 55], [11, 55], [12, 55], [13, 56], [14, 55], [15, 55], [16, 55], [17, 54], [18, 54], [19, 54], [20, 55], [21, 54], [22, 54], [23, 54], [24, 53], [25, 52], [26, 51], [27, 50], [28, 49], [29, 50], [29, 51], [29, 52], [29, 53], [30, 54], [31, 55], [32, 56], [33, 57], [34, 58], [35, 58], [36, 59], [37, 59], [38, 59], [39, 59], [40, 58], [40, 57], [40, 56], [40, 55], [40, 54], [41, 53], [42, 54], [43, 54], [44, 55], [45, 55], [46, 55], [47, 55], [48, 55], [49, 55], [50, 55], [51, 55], [52, 55], [53, 55], [54, 55], [55, 56], [56, 55], [57, 55], [57, 54], [56, 53], [55, 53], [54, 52], [53, 51], [53, 50], [53, 49], [53, 48], [52, 47], [51, 47], [50, 46], [49, 45], [48, 45], [47, 45], [46, 44], [46, 43], [47, 42], [48, 41], [49, 41], [50, 41], [51, 40], [52, 40], [53, 39], [54, 39], [55, 38], [56, 37], [57, 37], [58, 36], [58, 35], [57, 34], [57, 33], [58, 32], [59, 31], [59, 30], [59, 29], [59, 28], [59, 27], [59, 26], [59, 25], [59, 24], [59, 23], [59, 22], [59, 21], [58, 21], [57, 21], [56, 21], [55, 21], [54, 21], [53, 22], [52, 22], [51, 22], [50, 21], [49, 21], [48, 22], [47, 23], [46, 23], [45, 23], [45, 24], [44, 25], [43, 26], [42, 27], [41, 27], [40, 26], [39, 25], [39, 24], [40, 23], [40, 22], [41, 21], [42, 20], [42, 19], [43, 18], [43, 17], [43, 16], [42, 15], [43, 14], [43, 13], [44, 12], [44, 11], [44, 10], [44, 9], [44, 8], [44, 7], [43, 7], [42, 7], [41, 8], [40, 9], [39, 9], [38, 8], [38, 7], [38, 6], [37, 5], [36, 5], [35, 4], [34, 3], [33, 2], [32, 1], [31, 0], [30, 0]]
    
    
//     this.image = scene.add.polygon(400, 300, this.shape, 0x0000ff, 0.2);

//     scene.matter.add.gameObject(this.image, { shape: { type: 'fromVerts', verts: this.shape, flagInternal: true } });

//     // this.image.setVelocity(6, 3);
//     // this.image.setAngularVelocity(0.01);
//     // this.image.setBounce(1);
//     this.image.setFriction(0, 0, 0);
//     this.add(this.image);
    
//     // console.log(scene.matter.add);
//     // this.body = scene.matter.add.fromVertices(
//     //   0,
//     //   0,
//     //   this.shape,
//     //   {},
//     //   true,
//     //   false
//     // );
//     // this.add(this.body);
//     this.setPosition(x, y);
//     scene.add.existing(this);
//   }


//   generateBody() {

//   }
// }


class Leaf extends Block {
  constructor(x, y) {
    super(x, y);

    this.health = 1;
    this.score = 50;

    this.shape = [[17, 18], [18, 19], [19, 20], [19, 21], [20, 22], [20, 23], [21, 24], [21, 25], [20, 26], [19, 27], [18, 27], [17, 26], [16, 25], [15, 24], [15, 23], [14, 23], [13, 23], [12, 22], [11, 21], [10, 21], [9, 22], [8, 22], [7, 22], [6, 21], [5, 21], [4, 21], [3, 21], [2, 21], [1, 21], [1, 22], [1, 23], [1, 24], [1, 25], [1, 26], [2, 27], [1, 28], [1, 29], [1, 30], [1, 31], [2, 32], [3, 33], [3, 34], [2, 35], [2, 36], [3, 37], [4, 37], [5, 38], [6, 39], [7, 40], [8, 40], [9, 41], [10, 41], [11, 41], [12, 42], [13, 42], [14, 42], [15, 43], [14, 44], [13, 45], [12, 45], [11, 45], [10, 46], [9, 47], [8, 47], [7, 48], [7, 49], [7, 50], [7, 51], [6, 52], [5, 53], [4, 53], [3, 54], [3, 55], [4, 55], [5, 56], [6, 55], [7, 55], [8, 55], [9, 55], [10, 55], [11, 55], [12, 55], [13, 56], [14, 55], [15, 55], [16, 55], [17, 54], [18, 54], [19, 54], [20, 55], [21, 54], [22, 54], [23, 54], [24, 53], [25, 52], [26, 51], [27, 50], [28, 49], [29, 50], [29, 51], [29, 52], [29, 53], [30, 54], [31, 55], [32, 56], [33, 57], [34, 58], [35, 58], [36, 59], [37, 59], [38, 59], [39, 59], [40, 58], [40, 57], [40, 56], [40, 55], [40, 54], [41, 53], [42, 54], [43, 54], [44, 55], [45, 55], [46, 55], [47, 55], [48, 55], [49, 55], [50, 55], [51, 55], [52, 55], [53, 55], [54, 55], [55, 56], [56, 55], [57, 55], [57, 54], [56, 53], [55, 53], [54, 52], [53, 51], [53, 50], [53, 49], [53, 48], [52, 47], [51, 47], [50, 46], [49, 45], [48, 45], [47, 45], [46, 44], [46, 43], [47, 42], [48, 41], [49, 41], [50, 41], [51, 40], [52, 40], [53, 39], [54, 39], [55, 38], [56, 37], [57, 37], [58, 36], [58, 35], [57, 34], [57, 33], [58, 32], [59, 31], [59, 30], [59, 29], [59, 28], [59, 27], [59, 26], [59, 25], [59, 24], [59, 23], [59, 22], [59, 21], [58, 21], [57, 21], [56, 21], [55, 21], [54, 21], [53, 22], [52, 22], [51, 22], [50, 21], [49, 21], [48, 22], [47, 23], [46, 23], [45, 23], [45, 24], [44, 25], [43, 26], [42, 27], [41, 27], [40, 26], [39, 25], [39, 24], [40, 23], [40, 22], [41, 21], [42, 20], [42, 19], [43, 18], [43, 17], [43, 16], [42, 15], [43, 14], [43, 13], [44, 12], [44, 11], [44, 10], [44, 9], [44, 8], [44, 7], [43, 7], [42, 7], [41, 8], [40, 9], [39, 9], [38, 8], [38, 7], [38, 6], [37, 5], [36, 5], [35, 4], [34, 3], [33, 2], [32, 1], [31, 0], [30, 0]]
    
    const verts = this.shape.map(([x, y]) => ({ x, y }));

    // Matter body from vertices
    this.body = scene.matter.add.fromVertices(x, y, verts, {
      restitution: 0,
      friction: 0,
      isStatic: true
    });

    // Optional: draw outline for debugging
    let graphics = scene.add.graphics();
    graphics.lineStyle(2, 0x00ff00, 1);
    graphics.strokePoints(this.shape.map(([px, py]) => new Phaser.Geom.Point(px, py)), true);
    
    this.add(graphics);

    scene.add.existing(this);
  }

  die() {
    scene.remove.existing(this);
  }

  hit() {
    this.health -= 1;
    if (this.health <= 0) {
      this.die();
    }
  }
}